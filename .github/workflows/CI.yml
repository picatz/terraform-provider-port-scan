name: CI

on:
  push:
    branches: [ "master", "test-*" ]
  pull_request:
    branches: [ "*" ]
  schedule:
    - cron: "0 6 * * *"

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      vault:
        image: vault
        ports:
          - 8200:8200
      consul:
        image: consul
        ports:
          - 8500:8500

    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - uses: hashicorp/setup-terraform@v1.1.0

    - name: Build Provider
      run: |
        make build

    - name: Install Provider
      run: |
        mkdir -p ~/.local/share/terraform/plugins/terraform.local/picatz/port/1.0.0/linux_amd64
        mv terraform-provider-port ~/.local/share/terraform/plugins/terraform.local/picatz/port/1.0.0/linux_amd64

    - name: Setup Terraform Test File
      run: |
        touch main.tf

        echo '
          terraform {
            required_providers {
              port = {
                source  = "terraform.local/picatz/port"
                version = "1.0.0"
              }
            }
          }

          data "port_scan" "example" {
            ip_address = "127.0.0.1"
            ports      = [8200, 8500]
          }

          output "open_ports" {
            value = data.port_scan.example.open_ports
          }
        ' > main.tf

    - name: Terraform fmt
      continue-on-error: true
      run: |
        terraform fmt

    - name: Terraform Init
      run: |
        terraform init

    - name: Terraform Validate
      run: |
        terraform validate

    - name: Terraform Plan
      continue-on-error: true
      run: |
        terraform plan

    - name: Terraform Apply
      continue-on-error: true
      run: |
        terraform apply -auto-approve

    - name: Verify Output
      run: |
        if terraform output -json open_ports | grep --silent "[8200,8500]"; then
          echo "✅ Successfully verified Terraform's output!"
        else
          echo "❌ Terraform's output was unexpected!"
          terraform output open_ports
          exit 1
        fi
