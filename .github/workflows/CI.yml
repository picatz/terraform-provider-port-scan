name: CI

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]
  schedule:
    - cron: "0 6 * * *"

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      vault:
        image: vault
        ports:
          - 8200:8200
      consul:
        image: consul
        ports:
          - 8500:8500

    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        
    - name: Setup Terraform
      env: 
        TERRAFORM_VERSION: 0.12.26
      run: |
        wget "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
        unzip "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
        sudo mv terraform /usr/local/bin
        rm "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"

    - name: Build Provider
      run: |
        make build

    - name: Setup Terraform Test File
      run: |
        touch main.tf

        echo '
          data "port_scan" "example" {
            ip_address = "127.0.0.1"
            ports      = [8200, 8500]
          }

          output "open_ports" {
            value = data.port_scan.example.open_ports
          }
        ' > main.tf

    - name: Terraform fmt
      continue-on-error: true
      run: |
        terraform fmt

    - name: Terraform Init
      run: |
        terraform init

    - name: Terraform Validate
      run: |
        terraform validate

    - name: Terraform Plan
      continue-on-error: true
      run: |
        terraform plan
        
    - name: Terraform Apply
      continue-on-error: true 
      run: |
        terraform apply -auto-approve

    - name: Verify Outputs
      continue-on-error: true 
      run: |
        if terraform output -json open_ports | jq 'contains([8200, 8600])' | grep --silent true; then 
          echo "✅ Successfully verified Terraform's output!"
        else
          echo "❌ Terraform's output was unexpected!"
          terraform output open_ports
          exit 1
        fi
